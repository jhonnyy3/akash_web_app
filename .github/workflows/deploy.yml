name: Deploy to Akash

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: jhonny535/akash-web-app
      AKASH_WALLET_NAME: testwallet
      AKASH_WALLET_MNEMONIC: ${{ secrets.AKASH_WALLET_MNEMONIC }}
      AKASH_KEYRING_BACKEND: test
      AKASH_CHAIN_ID: akashnet-1
      AKASH_NODE: https://rpc.akashnet.net:443
      AKASH_HOME: /home/runner/.akash

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      - name: Install Akash CLI
        run: |
          curl -LO https://github.com/akash-network/node/releases/download/v0.38.2/akash_0.38.2_Linux_amd64.deb
          sudo dpkg -i akash_0.38.2_Linux_amd64.deb
          akash version

      - name: Install provider-services CLI
        run: |
          curl -s https://raw.githubusercontent.com/akash-network/provider/main/install.sh | bash
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
          export PATH="$GITHUB_WORKSPACE/bin:$PATH"
          provider-services version

      - name: Install jq (JSON parser)
        run: sudo apt-get install -y jq

      - name: Restore Wallet (Only if Missing)
        run: |
          if ! akash keys show "$AKASH_WALLET_NAME" --keyring-backend "$AKASH_KEYRING_BACKEND" > /dev/null 2>&1; then
            echo "$AKASH_WALLET_MNEMONIC" | akash keys add "$AKASH_WALLET_NAME" --recover --keyring-backend "$AKASH_KEYRING_BACKEND"
          else
            echo "Wallet already exists. Skipping recovery."
          fi

      - name: Generate and Publish Certificate (Only if Missing)
        run: |
          CERT_COUNT=$(akash query cert list "$AKASH_WALLET_NAME" --node "$AKASH_NODE" --output json | jq '.certificates | length')

          if [ "$CERT_COUNT" -eq 0 ]; then
            echo "No certificate found. Generating and publishing..."
            akash cert generate --keyring-backend "$AKASH_KEYRING_BACKEND"
            akash tx cert create \
              --from "$AKASH_WALLET_NAME" \
              --keyring-backend "$AKASH_KEYRING_BACKEND" \
              --chain-id "$AKASH_CHAIN_ID" \
              --node "$AKASH_NODE" \
              --gas-prices 0.025uakt \
              --gas auto \
              --gas-adjustment 1.5 \
              -y
          else
            echo "Certificate already exists. Skipping generation."
          fi

      - name: Create Akash Deployment
        run: |
          OWNER_ADDRESS=$(akash keys show "$AKASH_WALLET_NAME" -a --keyring-backend "$AKASH_KEYRING_BACKEND")
          akash tx deployment create deploy.yaml \
            --from "$AKASH_WALLET_NAME" \
            --owner "$OWNER_ADDRESS" \
            --keyring-backend "$AKASH_KEYRING_BACKEND" \
            --chain-id "$AKASH_CHAIN_ID" \
            --node "$AKASH_NODE" \
            --gas-prices 0.025uakt \
            --gas auto \
            --gas-adjustment 1.5 \
            -y

      - name: Extract DSEQ from Deployment
        id: get-dseq
        run: |
          OWNER_ADDRESS=$(akash keys show "$AKASH_WALLET_NAME" -a --keyring-backend "$AKASH_KEYRING_BACKEND")
          DSEQ=$(akash query deployment list --owner "$OWNER_ADDRESS" --node "$AKASH_NODE" --output json | jq -r '.deployments[-1].deployment.deployment_id.dseq')
          echo "DSEQ=$DSEQ" >> $GITHUB_ENV
          echo "Deployment sequence: $DSEQ"

      - name: Find a Provider Matching SDL
        id: find-provider
        run: |
          PROVIDER=$(akash query market provider list --node "$AKASH_NODE" --output json | jq -r '.providers[0].owner')

          if [ -z "$PROVIDER" ]; then
            echo "No provider found!"
            exit 1
          fi

          echo "Found provider: $PROVIDER"
          echo "PROVIDER=$PROVIDER" >> $GITHUB_ENV

      - name: Send Manifest to Provider
        run: |
          provider-services send-manifest deploy.yaml \
            --from "$AKASH_WALLET_NAME" \
            --provider "$PROVIDER" \
            --keyring-backend "$AKASH_KEYRING_BACKEND" \
            --node "$AKASH_NODE" \
            --dseq "$DSEQ"

      - name: Create Lease
        run: |
          akash tx market lease create \
            --from "$AKASH_WALLET_NAME" \
            --dseq "$DSEQ" \
            --gseq 1 \
            --oseq 1 \
            --provider "$PROVIDER" \
            --keyring-backend "$AKASH_KEYRING_BACKEND" \
            --chain-id "$AKASH_CHAIN_ID" \
            --node "$AKASH_NODE" \
            --gas-prices 0.025uakt \
            --gas auto \
            --gas-adjustment 1.5 \
            -y
